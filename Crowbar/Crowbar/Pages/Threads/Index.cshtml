@page
@model Crowbar.Pages.Threads.IndexModel
@inject ApplicationDbContext context
@{
    var threads = context.Threads.ToList()
                 .Where(x => Model.Category is null || x.Category == $"{Model.Category??0}")
                 .ToList();
    threads.Reverse();
    var category = context.Categories.Find(Model.Category);

    var cpage = Model.CPage;
    if (cpage < 1)
        cpage = 1;
    var perPage = 10;
    threads.Sort((x, y) => DateTime.Compare(y.Published, x.Published));
    var maxPages = 1;
    if (threads.Count > 0)
    {
        maxPages = (int)Math.Ceiling(
            (decimal)(
                (decimal)threads.Count / (decimal)perPage
            ));
        var start = (cpage - 1) * perPage;
        var end = threads.Count - start;
        if (end > perPage)
            end = perPage;
        if (end <= 0)
            return;
        threads = threads.GetRange(start, end);
    }

    ViewData["Title"] = category is null ? "All threads" : $"{category.Name} Threads";
}

<div class="p-3 rounded mb-3">
    <h2>@ViewData["Title"]</h2>
    @if (threads.Count == 0)
    {
        <p>&lt;There are no threads yet&gt;</p>
    }
    @foreach(var thread in threads) {
        var threadCategory = context.Categories.Find(int.Parse(thread.Category)) ?? new Models.Category { Name="Category deleted" };
        <div class="fs-6 d-flex justify-content-between p-2 mb-2 mt-2 border rounded w-100">
            <div>
                <p class="text-light-emphasis m-0 me-2">
                    Posted by <a href="/Profiles/@thread.Creator">@thread.Creator</a> | On <a href="/Categories/@threadCategory.Id">@threadCategory.Name</a> | @thread.Published.ToUniversalTime()
                </p>
                <a href="/Threads/@thread.Id" class="text-decoration-none fw-semibold fs-4 m-0">
                    @(thread.Title.Length > 50 ?
                    thread.Title.Substring(0, 47) + "..." :
                    thread.Title)
                </a>
                <p class="m-0 fs-6">@thread.Likes.Count() Likes, @thread.Dislikes.Count() Dislikes</p>
            </div>
        </div>
    }

    <div class="d-flex gap-3">
        <nav>
            <ul class="pagination">
                <li class="page-item"><a class="page-link" href="?CPage=1">Start</a></li>
                @for (int i = (cpage < 2 ? 1 : cpage - 1); (i <= maxPages && i <= cpage + 2); i++)
                {
                    <li class="page-item"><a class="page-link" href="?CPage=@(i)">@i</a></li>
                }
                <li class="page-item"><a class="page-link" href="?CPage=@maxPages">End</a></li>
            </ul>
        </nav>
        <span>Page @cpage of @maxPages</span>
    </div>
</div>
<a href="/Threads/New@(Model.Category == null ? "" : $"?Category={Model.Category}")">Create new thread</a>